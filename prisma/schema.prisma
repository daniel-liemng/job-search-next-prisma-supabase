generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime  @default(now())
  hashedPassword String?
  updatedAt      DateTime  @updatedAt
  role           Role      @default(USER)
  accounts       Account[]
  companies      Company[]
  profile        Profile?
  sessions       Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Profile {
  id        String   @id @default(cuid())
  userId    String   @unique
  bio       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Company {
  id        String   @id @default(cuid())
  name      String
  logo      String?
  capacity  String?
  desc      String?
  industry  String?  
  address   String?
  city      String?
  state     String?
  zip       String?
  ownerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       String?
  owner     User     @relation(fields: [ownerId], references: [id])
  jobs      Job[]

  @@index([ownerId])
}

model Category {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobs      Job[]
}

model Job {
  id          String   @id @default(cuid())
  name        String
  description String
  requirement String
  location    String?
  salary      String?
  type        String?
  workType    String?
  schedule    String?
  benefit     String?
  startDate   String?
  status      Boolean  @default(true)
  companyId   String
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    Category @relation(fields: [categoryId], references: [id])
  company     Company  @relation(fields: [companyId], references: [id])

  @@index([companyId, categoryId])
}

enum Role {
  USER
  EMPLOYER
  ADMIN
}
